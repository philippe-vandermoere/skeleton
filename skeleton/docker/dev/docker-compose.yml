version: '3.7'
services:
    nginx:
        labels: &label-docker-proxy
            com.docker-proxy.domain: ${HTTP_HOST}
            com.docker-proxy.ssl: true
            com.docker-proxy.certificate-provider.name: github
            com.docker-proxy.certificate-provider.token: ${GITHUB_TOKEN}
            com.docker-proxy.certificate-provider.repository: ${GITHUB_CERTIFICATES_REPOSITORY}
            com.docker-proxy.certificate-provider.certificate_path: ${HTTP_HOST}/fullchain.pem
            com.docker-proxy.certificate-provider.private_key_path: ${HTTP_HOST}/privkey.pem
            com.docker-proxy.certificate-provider.certificate_chain_path: ${HTTP_HOST}/chain.pem
        build:
            context: nginx
        environment:
            PHP_FPM_UPSTREAM: php-fpm:9000
            DNS_RESOLVER: 127.0.0.11
        volumes:
            - ./../../public:/var/www/html/public:ro

    php-fpm: &php-service
        hostname: ${COMPOSE_PROJECT_NAME}-php-fpm
        build:
            context: php
            args:
                DOCKER_UID: ${DOCKER_UID}
        environment:
            PHP_SESSION_HANDLER: redis
            PHP_SESSION_PATH: tcp://redis:6379?auth=${REDIS_PASSWORD}
            TIMEZONE: ${TIMEZONE}
            DATABASE_URL: mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mysql:3306/${MYSQL_DATABASE}?serverVersion=8.0&charset=utf8
            MESSENGER_TRANSPORT_DSN: amqp://${AMQP_USER}:${AMQP_PASSWORD}@rabbitmq:5672/${AMQP_VHOST_URLENCODE}/messages
        volumes:
            - ./../..:/var/www/html
        tmpfs:
            - /var/www/html/var/cache:uid=${DOCKER_UID},gid=82

    php-messenger-consumer:
        <<: *php-service
        hostname: ${COMPOSE_PROJECT_NAME}-php-messenger-consumer
        restart: always
        command: bin/console messenger:consume async --limit=5000 --time-limit=300 -vv

    mysql:
        image: mysql:8.0
        hostname: ${COMPOSE_PROJECT_NAME}-mysql
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
            TZ: ${TIMEZONE}
        volumes:
            - mysql:/var/lib/mysql

    adminer:
        image: adminer:4.7
        hostname: ${COMPOSE_PROJECT_NAME}-adminer
        labels:
            <<: *label-docker-proxy
            com.docker-proxy.port: 8080
            com.docker-proxy.path: /adminer
        environment:
            ADMINER_DEFAULT_SERVER: mysql

    redis:
        image: redis:5.0-alpine
        hostname: ${COMPOSE_PROJECT_NAME}-redis
        command: redis-server --requirepass ${REDIS_PASSWORD}
        environment:
            REDISCLI_AUTH: ${REDIS_PASSWORD}

    rabbitmq:
        image: rabbitmq:3.8-management-alpine
        hostname: ${COMPOSE_PROJECT_NAME}-rabbitmq
        labels:
            <<: *label-docker-proxy
            com.docker-proxy.port: 15672
            com.docker-proxy.path: /rabbitmq/
        environment:
            RABBITMQ_DEFAULT_USER: ${AMQP_USER}
            RABBITMQ_DEFAULT_PASS: ${AMQP_PASSWORD}
            RABBITMQ_DEFAULT_VHOST: ${AMQP_VHOST}
            RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbitmq_management path_prefix "/rabbitmq"
        volumes:
            - rabbitmq:/var/lib/rabbitmq

volumes:
    mysql:
    rabbitmq:
